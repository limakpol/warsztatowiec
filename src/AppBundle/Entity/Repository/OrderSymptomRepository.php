<?php

namespace AppBundle\Entity\Repository;
use AppBundle\Entity\Workshop;

/**
 * OrderSymptomRepository
 *
 * This class was generated by the Doctrine ORM. Add your own custom
 * repository methods below.
 */
class OrderSymptomRepository extends \Doctrine\ORM\EntityRepository
{
    public function getOne(Workshop $workshop, $id)
    {
        $orderSymptom = $this->_em->createQueryBuilder()
            ->select('s')
            ->from('AppBundle:OrderSymptom', 's')
            ->innerJoin('AppBundle:OrderHeader', 'o', 'WITH', 's.order_header_id = o.id')
            ->where('s.deleted_at IS NULL')
            ->andWhere('s.removed_at IS NULL')
            ->andWhere('o.deleted_at IS NULL')
            ->andWhere('o.removed_at IS NULL')
            ->andWhere('o.workshop = :workshop')
            ->andWhere('s.id = :id')
            ->setParameters([
                ':workshop' => $workshop,
                ':id' => $id,
            ])
            ->getQuery()
            ->getOneOrNullResult()
            ;

        return $orderSymptom;
    }

    public function getOneByName(Workshop $workshop, $name)
    {
        $orderSymptom = $this->_em->createQueryBuilder()
            ->select('s')
            ->from('AppBundle:OrderSymptom', 's')
            ->innerJoin('AppBundle:OrderHeader', 'o', 'WITH', 's.order_header_id = o.id')
            ->where('s.deleted_at IS NULL')
            ->andWhere('s.removed_at IS NULL')
            ->andWhere('o.deleted_at IS NULL')
            ->andWhere('o.removed_at IS NULL')
            ->andWhere('o.workshop = :workshop')
            ->andWhere('s.name = :name')
            ->setParameters([
                ':workshop' => $workshop,
                ':name' => $name,
            ])
            ->getQuery()
            ->getOneOrNullResult()
        ;

        return $orderSymptom;
    }

    public function retrieveNames(Workshop $workshop)
    {
        $symptomNames = $this->_em->createQueryBuilder()
            ->select('s.name')
            ->from('AppBundle:OrderSymptom', 's')
            ->leftJoin('AppBundle:OrderHeader', 'h', 'WITH', 's.order_header_id = h.id')
            ->where('h.workshop = :workshop')
            ->andWhere('s.deleted_at IS NULL')
            ->andWhere('s.removed_at IS NULL')
            ->andWhere('h.removed_at IS NULL')
            ->andWhere('h.deleted_at IS NULL')
            ->setParameter(':workshop', $workshop)
            ->orderBy('s.name', 'ASC')
            ->getQuery()
            ->getArrayResult()
            ;

        return $symptomNames;
    }

    public function retrieve(Workshop $workshop)
    {
        $symptoms = $this->_em->createQueryBuilder()
            ->select('s')
            ->from('AppBundle:OrderSymptom', 's')
            ->leftJoin('AppBundle:OrderHeader', 'h', 'WITH', 's.order_header_id = h.id')
            ->where('h.workshop = :workshop')
            ->andWhere('s.deleted_at IS NULL')
            ->andWhere('s.removed_at IS NULL')
            ->andWhere('h.removed_at IS NULL')
            ->andWhere('h.deleted_at IS NULL')
            ->setParameter(':workshop', $workshop)
            ->orderBy('s.name', 'ASC')
            ->distinct()
            ->getQuery()
            ->getResult()
        ;

        return $symptoms;
    }



}
